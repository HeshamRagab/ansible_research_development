namespace: {{ patroni_ns }}
scope: {{ patroni_scope }}
name: {{ ansible_hostname }}
restapi:
  listen: {{ ansible_host }}:8008
  connect_address: {{ ansible_host }}:8008
  certfile: /etc/db-cert/cert.pem
  keyfile: /etc/db-cert/cert-key.pem
  cafile: /etc/db-cert/ca.pem

etcd:
  hosts: {{ etcdClusterips }}
  username: {{ etcdUser }}
  password: {{ etcdPassword }}
  protocol: https
  cacert: /etc/db-cert/ca.pem

bootstrap:
  # this section will be written into Etcd:/<namespace>/<scope>/config after initializing new cluster
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    primary_start_timeout: 300
    #synchronous_mode: true
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        ssl: on
        ssl_cert_file: /etc/db-cert/cert.pem
        ssl_key_file: /etc/db-cert/cert-key.pem
        ssl_ca_file: /etc/db-cert/ca.pem
        wal_level: 'hot_standby'
        #----------------------------#
        shared_preload_libraries: 'pg_stat_statements'
        shared_buffers: 9312MB
        #max_prepared_transactions: 40
        work_mem: 19866kB
        max_stack_depth: 7680kB
        dynamic_shared_memory_type: posix
        max_wal_size: 1GB
        min_wal_size: 80MB
        wal_keep_segments: 10
        effective_cache_size: 11640MB
        log_line_prefix: '%m [%p] %q%u@%d '
        log_timezone: 'Africa/Cairo'
        stats_temp_directory: '/var/run/postgresql/{{ patroni_scope }}.pg_stat_tmp'
        datestyle: 'iso, mdy'
        timezone: 'Africa/Cairo'
        lc_messages: 'C.UTF-8'
        lc_monetary: 'C.UTF-8'
        lc_numeric: 'C.UTF-8'
        lc_time: 'C.UTF-8'
        default_text_search_config: 'pg_catalog.english'
        include_dir: 'conf.d'
        wal_log_hints: 'on'
        logging_collector: 'on'
        log_destination: 'csvlog'
        log_statement: 'none'
        log_checkpoints: 'on'
        log_connections: 'on'
        log_disconnections: 'on'
        log_lock_waits: 'on'
        log_min_duration_statement: 5
        #----------------------------#
        hot_standby: 'on'
        #max_wal_senders: 10
        max_replication_slots: 10
        #archive_mode: 'on'
        #archive_timeout: 600
        #archive_command: '/bin/true'
        #archive_command: 'cp -f %p /home/postgres/archived/%f'
        #recovery_conf:
        #restore_command: cp /home/postgres/archived/%f %p

  initdb:  # Note: It needs to be a list (some options need values, others are switches)
  - encoding: UTF8
  - data-checksums

#  pg_hba:
#  - hostssl replication replicator 192.168.1.0/24 md5
#  - hostssl all all 192.168.1.0/24 md5
#  - hostssl all all ::0/0 md5
#  - local   all  postgres  trust
#  - host    all all 127.0.0.1/32 trust
 
  users:
    admin:
      password: {{ psql_admin_pass }}
      options:
        - createrole
        - createdb
postgresql:
  listen: '0.0.0.0:5432'
  connect_address: {{ ansible_host }}:5432
  data_dir: {{ psqlDataDir }}
  bin_dir: '/usr/lib/postgresql/{{ DBVersion }}/bin'
  config_dir: '/etc/postgresql/{{ DBVersion }}/main'
  log_dir: '/var/log/postgresql/'
  pgpass: /tmp/pgpass0
  authentication:
    replication:
      username: {{ psql_replicator_user }}
      password: {{ psql_replicator_pass }}
      sslmode: require
      sslkey: /etc/db-cert/cert-key.pem
      sslcert: /etc/db-cert/cert.pem
      sslrootcert: /etc/db-cert/ca.pem

    superuser:
      username: postgres
      password: {{ psql_postgres_pass }}
      sslmode: require
      sslkey: /etc/db-cert/cert-key.pem
      sslcert: /etc/db-cert/cert.pem
      sslrootcert: /etc/db-cert/ca.pem

  parameters:
    unix_socket_directories: '/var/run/postgresql'

#watchdog:
#  mode: required # Allowed values: off, automatic, required
#  device: /dev/watchdog
#  safety_margin: 5

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false